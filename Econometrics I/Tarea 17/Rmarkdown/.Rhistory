Y <- 0.6 + 0.5*X[1:120] + U[1:120]
Y[121:260] <- 0.9 + 0.3*X[121:260] + U[121:260]
W <- as.matrix(data.frame(Y=Y,X=X))
m <- 2
k <- 4
R <- matrix(c(diag(2), -diag(2)), nrow = k/2, ncol = k)
R
r <- matrix(c(0,0))
r
X <- rbind(cbind(1, X[1:120], 0, 0),
cbind(0, 0, 1, X[121:n])
)
dim(X)
#Matriz (X'X)^{-1}
XX_inv <- solve(t(X)%*%X)
#Estimadores de MCU
b_MCU <- XX_inv%*%t(X)%*%W[,1]
b_MCU
#Errores de MCU
U_MCU <- W[,1] - X%*%b_MCU
#Varianza de los errores de MCU
var.u_MCU <- 1/(n-k)*t(U_MCU)%*%U_MCU
F_b.hat <- (t(R%*%b_MCU - r)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU - r)) / (m*var.u_MCU)
F_b.hat
alpha <- 0.05
F_alpha <- qf(alpha, df1 = m, df2 = n-k, lower.tail = F)
F_alpha
# #mismo resultado
# b_mcr_test <- b_MCU - XX_inv%*%t(R)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU-r)
Z <- cbind(1, W[,2])
b_mcr <- rbind(solve(t(Z)%*%Z)%*%t(Z)%*%W[,1],
solve(t(Z)%*%Z)%*%t(Z)%*%W[,1])
b_mcr
U_mcr <- W[,1] - X%*%b_mcr
F_b.hat <- (t(U_mcr)%*%U_mcr - t(U_MCU)%*%U_MCU) / (m*1/(n-k)*t(U_MCU)%*%U_MCU)
F_b.hat
numerador <- t(b_mcr - b_MCU)%*%solve(XX_inv)%*%(b_mcr - b_MCU)
denominador <- (m*1/(n-k)*t(U_MCU)%*%U_MCU)
F_b.hat <- numerador / denominador
F_b.hat
rm(list = ls())
library(wooldridge)
library(dplyr)
sleep75["age^2"] <- sleep75$age^2
mujeres <- sleep75 %>%
filter(male==0) %>%
select(sleep, totwrk, educ, age, `age^2`, yngkid) %>%
as.matrix()
hombres <- sleep75 %>%
filter(male==1) %>%
select(sleep, totwrk, educ, age, `age^2`, yngkid) %>%
as.matrix()
W <- as.matrix(rbind(mujeres, hombres))
n <- nrow(W)
m <- 6
k <- 12
R <- matrix(c(diag(m), -diag(m)), nrow = k/2, ncol = k)
r <- matrix(rep(0, m))
X <- rbind(cbind(1, mujeres[,-1], 0, 0, 0, 0, 0, 0),
cbind(0, 0, 0, 0, 0, 0, 1, hombres[,-1]))
dim(X)
#Matriz (X'X)^{-1}
XX_inv <- solve(t(X)%*%X)
#Estimadores de MCU
b_MCU <- XX_inv%*%t(X)%*%W[,1]
names(b_MCU)
class(b_MCU)
dimnames(b_MCU)
dimnames(b_MCU)[[1]]
rownames(b_MCU)
#Estimadores de MCU
b_MCU <- XX_inv%*%t(X)%*%W[,1]
b_MCU
rownames(b_MCU)
\\alpha_m, \\beta_{1m}, \\beta_{2m}, \\beta_{3m}, \\beta_{4m}, \\beta_{5m}
c("\\alpha_m", "\\beta_{1m}", "\\beta_{2m}", "\\beta_{3m}", "\\beta_{4m}", "\\beta_{5m}")
c("\\alpha_m", "\\beta_{1m}", "\\beta_{2m}", "\\beta_{3m}", "\\beta_{4m}", "\\beta_{5m}", "\\alpha_h", "\\beta_{1h}", "\\beta_{2h}", "\\beta_{3h}", "\\beta_{4h}", "\\beta_{5h}")
b_MCU
b_MCU
X <- rbind(cbind(1, mujeres[,-1], 0, 0, 0, 0, 0, 0),
cbind(0, 0, 0, 0, 0, 0, 1, hombres[,-1]))
dim(X)
#Matriz (X'X)^{-1}
XX_inv <- solve(t(X)%*%X)
#Estimadores de MCU
b_MCU <- XX_inv%*%t(X)%*%W[,1]
rownames(b_MCU) <- c("\\alpha_m", "\\beta_{1m}", "\\beta_{2m}", "\\beta_{3m}", "\\beta_{4m}", "\\beta_{5m}",
"\\alpha_h", "\\beta_{1h}", "\\beta_{2h}", "\\beta_{3h}", "\\beta_{4h}", "\\beta_{5h}")
b_MCU
names(b_MCU)
colnames(b_MCU)
str(b_MCU)
colnames(b_MCU)
colnames(b_MCU) <- "1"
b_MCU
b_MCU
knitr::opts_chunk$set(echo = T)
rm(list = ls())
library(stargazer)
set.seed(1)
n <- 260
X <- rgamma(n = n, shape = 1)
X <- as.matrix(X)
set.seed(2)
U <- rnorm(n = n, mean = 0, sd = sqrt(0.4))
U <- as.matrix(U)
Y <- 0.6 + 0.5*X[1:120] + U[1:120]
Y[121:260] <- 0.9 + 0.3*X[121:260] + U[121:260]
W <- as.matrix(data.frame(Y=Y,X=X))
m <- 2
k <- 4
R <- matrix(c(diag(2), -diag(2)), nrow = k/2, ncol = k)
R
r <- matrix(c(0,0))
r
X <- rbind(cbind(1, X[1:120], 0, 0),
cbind(0, 0, 1, X[121:n])
)
dim(X)
#Matriz (X'X)^{-1}
XX_inv <- solve(t(X)%*%X)
#Estimadores de MCU
b_MCU <- XX_inv%*%t(X)%*%W[,1]
b_MCU
#Errores de MCU
U_MCU <- W[,1] - X%*%b_MCU
#Varianza de los errores de MCU
var.u_MCU <- 1/(n-k)*t(U_MCU)%*%U_MCU
F_b.hat <- (t(R%*%b_MCU - r)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU - r)) / (m*var.u_MCU)
F_b.hat
alpha <- 0.05
F_alpha <- qf(alpha, df1 = m, df2 = n-k, lower.tail = F)
F_alpha
# #mismo resultado
# b_mcr_test <- b_MCU - XX_inv%*%t(R)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU-r)
Z <- cbind(1, W[,2])
b_mcr <- rbind(solve(t(Z)%*%Z)%*%t(Z)%*%W[,1],
solve(t(Z)%*%Z)%*%t(Z)%*%W[,1])
b_mcr
U_mcr <- W[,1] - X%*%b_mcr
F_b.hat <- (t(U_mcr)%*%U_mcr - t(U_MCU)%*%U_MCU) / (m*1/(n-k)*t(U_MCU)%*%U_MCU)
F_b.hat
numerador <- t(b_mcr - b_MCU)%*%solve(XX_inv)%*%(b_mcr - b_MCU)
denominador <- (m*1/(n-k)*t(U_MCU)%*%U_MCU)
F_b.hat <- numerador / denominador
F_b.hat
rm(list = ls())
library(wooldridge)
library(dplyr)
sleep75["age^2"] <- sleep75$age^2
mujeres <- sleep75 %>%
filter(male==0) %>%
select(sleep, totwrk, educ, age, `age^2`, yngkid) %>%
as.matrix()
hombres <- sleep75 %>%
filter(male==1) %>%
select(sleep, totwrk, educ, age, `age^2`, yngkid) %>%
as.matrix()
W <- as.matrix(rbind(mujeres, hombres))
n <- nrow(W)
m <- 6
k <- 12
R <- matrix(c(diag(m), -diag(m)), nrow = k/2, ncol = k)
r <- matrix(rep(0, m))
library(xtable)
X <- rbind(cbind(1, mujeres[,-1], 0, 0, 0, 0, 0, 0),
cbind(0, 0, 0, 0, 0, 0, 1, hombres[,-1]))
dim(X)
#Matriz (X'X)^{-1}
XX_inv <- solve(t(X)%*%X)
#Estimadores de MCU
b_MCU <- XX_inv%*%t(X)%*%W[,1]
rownames(b_MCU) <- c("$\\hat{\\alpha}_m$", "$\\hat{\\beta}_{1m}$", "$\\hat{\\beta}_{2m}$",
"$\\hat{\\beta}_{3m}$", "$\\hat{\\beta}_{4m}$", "$\\hat{\\beta}_{5m}$",
"$\\hat{\\alpha}_h$", "$\\hat{\\beta}_{1h}$", "$\\hat{\\beta}_{2h}$",
"$\\hat{\\beta}_{3h}$", "$\\hat{\\beta}_{4h}$", "$\\hat{\\beta}_{5h}$")
colnames(b_MCU) <- "Valor"
print(xtable(b_MCU, digits = 5),
sanitize.text.function=function(x){x},
comment = F)
#Errores de MCU
U_MCU <- W[,1] - X%*%b_MCU
#Varianza de los errores de MCU
var.u_MCU <- 1/(n-k)*t(U_MCU)%*%U_MCU
F_b.hat <- (t(R%*%b_MCU - r)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU - r)) / (m*var.u_MCU)
F_b.hat
alpha <- 0.05
F_alpha <- qf(alpha, df1 = m, df2 = n-k, lower.tail = F)
F_alpha
# #mismo resultado
# b_mcr_test <- b_MCU - XX_inv%*%t(R)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU-r)
Z <- cbind(1, W[,2])
b_mcr <- rbind(solve(t(Z)%*%Z)%*%t(Z)%*%W[,1],
solve(t(Z)%*%Z)%*%t(Z)%*%W[,1])
b_mcr
knitr::opts_chunk$set(echo = T)
rm(list = ls())
library(stargazer)
set.seed(1)
n <- 260
X <- rgamma(n = n, shape = 1)
X <- as.matrix(X)
set.seed(2)
U <- rnorm(n = n, mean = 0, sd = sqrt(0.4))
U <- as.matrix(U)
Y <- 0.6 + 0.5*X[1:120] + U[1:120]
Y[121:260] <- 0.9 + 0.3*X[121:260] + U[121:260]
W <- as.matrix(data.frame(Y=Y,X=X))
m <- 2
k <- 4
R <- matrix(c(diag(2), -diag(2)), nrow = k/2, ncol = k)
R
r <- matrix(c(0,0))
r
X <- rbind(cbind(1, X[1:120], 0, 0),
cbind(0, 0, 1, X[121:n])
)
dim(X)
#Matriz (X'X)^{-1}
XX_inv <- solve(t(X)%*%X)
#Estimadores de MCU
b_MCU <- XX_inv%*%t(X)%*%W[,1]
b_MCU
#Errores de MCU
U_MCU <- W[,1] - X%*%b_MCU
#Varianza de los errores de MCU
var.u_MCU <- 1/(n-k)*t(U_MCU)%*%U_MCU
F_b.hat <- (t(R%*%b_MCU - r)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU - r)) / (m*var.u_MCU)
F_b.hat
alpha <- 0.05
F_alpha <- qf(alpha, df1 = m, df2 = n-k, lower.tail = F)
F_alpha
# #mismo resultado
# b_mcr_test <- b_MCU - XX_inv%*%t(R)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU-r)
Z <- cbind(1, W[,2])
b_mcr <- rbind(solve(t(Z)%*%Z)%*%t(Z)%*%W[,1],
solve(t(Z)%*%Z)%*%t(Z)%*%W[,1])
b_mcr
U_mcr <- W[,1] - X%*%b_mcr
F_b.hat <- (t(U_mcr)%*%U_mcr - t(U_MCU)%*%U_MCU) / (m*1/(n-k)*t(U_MCU)%*%U_MCU)
F_b.hat
numerador <- t(b_mcr - b_MCU)%*%solve(XX_inv)%*%(b_mcr - b_MCU)
denominador <- (m*1/(n-k)*t(U_MCU)%*%U_MCU)
F_b.hat <- numerador / denominador
F_b.hat
rm(list = ls())
library(wooldridge)
library(dplyr)
sleep75["age^2"] <- sleep75$age^2
mujeres <- sleep75 %>%
filter(male==0) %>%
select(sleep, totwrk, educ, age, `age^2`, yngkid) %>%
as.matrix()
hombres <- sleep75 %>%
filter(male==1) %>%
select(sleep, totwrk, educ, age, `age^2`, yngkid) %>%
as.matrix()
W <- as.matrix(rbind(mujeres, hombres))
n <- nrow(W)
m <- 6
k <- 12
R <- matrix(c(diag(m), -diag(m)), nrow = k/2, ncol = k)
r <- matrix(rep(0, m))
library(xtable)
X <- rbind(cbind(1, mujeres[,-1], 0, 0, 0, 0, 0, 0),
cbind(0, 0, 0, 0, 0, 0, 1, hombres[,-1]))
dim(X)
#Matriz (X'X)^{-1}
XX_inv <- solve(t(X)%*%X)
#Estimadores de MCU
b_MCU <- XX_inv%*%t(X)%*%W[,1]
rownames(b_MCU) <- c("$\\hat{\\alpha}_m$", "$\\hat{\\beta}_{1m}$", "$\\hat{\\beta}_{2m}$",
"$\\hat{\\beta}_{3m}$", "$\\hat{\\beta}_{4m}$", "$\\hat{\\beta}_{5m}$",
"$\\hat{\\alpha}_h$", "$\\hat{\\beta}_{1h}$", "$\\hat{\\beta}_{2h}$",
"$\\hat{\\beta}_{3h}$", "$\\hat{\\beta}_{4h}$", "$\\hat{\\beta}_{5h}$")
colnames(b_MCU) <- "Valor"
print(xtable(b_MCU, digits = 5),
sanitize.text.function=function(x){x},
comment = F)
#Errores de MCU
U_MCU <- W[,1] - X%*%b_MCU
#Varianza de los errores de MCU
var.u_MCU <- 1/(n-k)*t(U_MCU)%*%U_MCU
F_b.hat <- (t(R%*%b_MCU - r)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU - r)) / (m*var.u_MCU)
F_b.hat
alpha <- 0.05
F_alpha <- qf(alpha, df1 = m, df2 = n-k, lower.tail = F)
F_alpha
W
W
# #mismo resultado
# b_mcr_test <- b_MCU - XX_inv%*%t(R)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU-r)
Z <- cbind(1, W[,-1])
b_mcr <- rbind(solve(t(Z)%*%Z)%*%t(Z)%*%W[,1],
solve(t(Z)%*%Z)%*%t(Z)%*%W[,1])
b_mcr
lm(sleep~totwrk+educ+age+I(age^2)+yngkid, data = sleep75)
lm(sleep~totwrk+educ+age+I(age^2)+yngkid, data = sleep75)
F_b.hat <- (t(U_mcr)%*%U_mcr - t(U_MCU)%*%U_MCU) / (m*1/(n-k)*t(U_MCU)%*%U_MCU)
knitr::opts_chunk$set(echo = T)
rm(list = ls())
library(stargazer)
set.seed(1)
n <- 260
X <- rgamma(n = n, shape = 1)
X <- as.matrix(X)
set.seed(2)
U <- rnorm(n = n, mean = 0, sd = sqrt(0.4))
U <- as.matrix(U)
Y <- 0.6 + 0.5*X[1:120] + U[1:120]
Y[121:260] <- 0.9 + 0.3*X[121:260] + U[121:260]
W <- as.matrix(data.frame(Y=Y,X=X))
m <- 2
k <- 4
R <- matrix(c(diag(2), -diag(2)), nrow = k/2, ncol = k)
R
r <- matrix(c(0,0))
r
X <- rbind(cbind(1, X[1:120], 0, 0),
cbind(0, 0, 1, X[121:n])
)
dim(X)
#Matriz (X'X)^{-1}
XX_inv <- solve(t(X)%*%X)
#Estimadores de MCU
b_MCU <- XX_inv%*%t(X)%*%W[,1]
b_MCU
#Errores de MCU
U_MCU <- W[,1] - X%*%b_MCU
#Varianza de los errores de MCU
var.u_MCU <- 1/(n-k)*t(U_MCU)%*%U_MCU
F_b.hat <- (t(R%*%b_MCU - r)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU - r)) / (m*var.u_MCU)
F_b.hat
alpha <- 0.05
F_alpha <- qf(alpha, df1 = m, df2 = n-k, lower.tail = F)
F_alpha
# #mismo resultado
# b_mcr_test <- b_MCU - XX_inv%*%t(R)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU-r)
Z <- cbind(1, W[,2])
b_mcr <- rbind(solve(t(Z)%*%Z)%*%t(Z)%*%W[,1],
solve(t(Z)%*%Z)%*%t(Z)%*%W[,1])
b_mcr
U_mcr <- W[,1] - X%*%b_mcr
F_b.hat <- (t(U_mcr)%*%U_mcr - t(U_MCU)%*%U_MCU) / (m*1/(n-k)*t(U_MCU)%*%U_MCU)
F_b.hat
numerador <- t(b_mcr - b_MCU)%*%solve(XX_inv)%*%(b_mcr - b_MCU)
denominador <- (m*1/(n-k)*t(U_MCU)%*%U_MCU)
F_b.hat <- numerador / denominador
F_b.hat
rm(list = ls())
library(wooldridge)
library(dplyr)
sleep75["age^2"] <- sleep75$age^2
mujeres <- sleep75 %>%
filter(male==0) %>%
select(sleep, totwrk, educ, age, `age^2`, yngkid) %>%
as.matrix()
hombres <- sleep75 %>%
filter(male==1) %>%
select(sleep, totwrk, educ, age, `age^2`, yngkid) %>%
as.matrix()
W <- as.matrix(rbind(mujeres, hombres))
n <- nrow(W)
m <- 6
k <- 12
R <- matrix(c(diag(m), -diag(m)), nrow = k/2, ncol = k)
r <- matrix(rep(0, m))
library(xtable)
X <- rbind(cbind(1, mujeres[,-1], 0, 0, 0, 0, 0, 0),
cbind(0, 0, 0, 0, 0, 0, 1, hombres[,-1]))
dim(X)
#Matriz (X'X)^{-1}
XX_inv <- solve(t(X)%*%X)
#Estimadores de MCU
b_MCU <- XX_inv%*%t(X)%*%W[,1]
rownames(b_MCU) <- c("$\\hat{\\alpha}_m$", "$\\hat{\\beta}_{1m}$", "$\\hat{\\beta}_{2m}$",
"$\\hat{\\beta}_{3m}$", "$\\hat{\\beta}_{4m}$", "$\\hat{\\beta}_{5m}$",
"$\\hat{\\alpha}_h$", "$\\hat{\\beta}_{1h}$", "$\\hat{\\beta}_{2h}$",
"$\\hat{\\beta}_{3h}$", "$\\hat{\\beta}_{4h}$", "$\\hat{\\beta}_{5h}$")
colnames(b_MCU) <- "Valor"
print(xtable(b_MCU, digits = 5),
sanitize.text.function=function(x){x},
comment = F)
#Errores de MCU
U_MCU <- W[,1] - X%*%b_MCU
#Varianza de los errores de MCU
var.u_MCU <- 1/(n-k)*t(U_MCU)%*%U_MCU
F_b.hat <- (t(R%*%b_MCU - r)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU - r)) / (m*var.u_MCU)
F_b.hat
alpha <- 0.05
F_alpha <- qf(alpha, df1 = m, df2 = n-k, lower.tail = F)
F_alpha
# #mismo resultado
# b_mcr_test <- b_MCU - XX_inv%*%t(R)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU-r)
Z <- cbind(1, W[,-1])
b_mcr <- rbind(solve(t(Z)%*%Z)%*%t(Z)%*%W[,1],
solve(t(Z)%*%Z)%*%t(Z)%*%W[,1])
b_mcr
U_mcr <- W[,1] - X%*%b_mcr
F_b.hat <- (t(U_mcr)%*%U_mcr - t(U_MCU)%*%U_MCU) / (m*1/(n-k)*t(U_MCU)%*%U_MCU)
F_b.hat
knitr::opts_chunk$set(echo = T)
rm(list = ls())
library(stargazer)
set.seed(1)
n <- 260
X <- rgamma(n = n, shape = 1)
X <- as.matrix(X)
set.seed(2)
U <- rnorm(n = n, mean = 0, sd = sqrt(0.4))
U <- as.matrix(U)
Y <- 0.6 + 0.5*X[1:120] + U[1:120]
Y[121:260] <- 0.9 + 0.3*X[121:260] + U[121:260]
W <- as.matrix(data.frame(Y=Y,X=X))
m <- 2
k <- 4
R <- matrix(c(diag(2), -diag(2)), nrow = k/2, ncol = k)
R
r <- matrix(c(0,0))
r
X <- rbind(cbind(1, X[1:120], 0, 0),
cbind(0, 0, 1, X[121:n])
)
dim(X)
#Matriz (X'X)^{-1}
XX_inv <- solve(t(X)%*%X)
#Estimadores de MCU
b_MCU <- XX_inv%*%t(X)%*%W[,1]
b_MCU
#Errores de MCU
U_MCU <- W[,1] - X%*%b_MCU
#Varianza de los errores de MCU
var.u_MCU <- 1/(n-k)*t(U_MCU)%*%U_MCU
F_b.hat <- (t(R%*%b_MCU - r)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU - r)) / (m*var.u_MCU)
F_b.hat
alpha <- 0.05
F_alpha <- qf(alpha, df1 = m, df2 = n-k, lower.tail = F)
F_alpha
# #mismo resultado
# b_mcr_test <- b_MCU - XX_inv%*%t(R)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU-r)
Z <- cbind(1, W[,2])
b_mcr <- rbind(solve(t(Z)%*%Z)%*%t(Z)%*%W[,1],
solve(t(Z)%*%Z)%*%t(Z)%*%W[,1])
b_mcr
U_mcr <- W[,1] - X%*%b_mcr
F_b.hat <- (t(U_mcr)%*%U_mcr - t(U_MCU)%*%U_MCU) / (m*1/(n-k)*t(U_MCU)%*%U_MCU)
F_b.hat
numerador <- t(b_mcr - b_MCU)%*%solve(XX_inv)%*%(b_mcr - b_MCU)
denominador <- (m*1/(n-k)*t(U_MCU)%*%U_MCU)
F_b.hat <- numerador / denominador
F_b.hat
rm(list = ls())
library(wooldridge)
library(dplyr)
sleep75["age^2"] <- sleep75$age^2
mujeres <- sleep75 %>%
filter(male==0) %>%
select(sleep, totwrk, educ, age, `age^2`, yngkid) %>%
as.matrix()
hombres <- sleep75 %>%
filter(male==1) %>%
select(sleep, totwrk, educ, age, `age^2`, yngkid) %>%
as.matrix()
W <- as.matrix(rbind(mujeres, hombres))
n <- nrow(W)
m <- 6
k <- 12
R <- matrix(c(diag(m), -diag(m)), nrow = k/2, ncol = k)
r <- matrix(rep(0, m))
library(xtable)
X <- rbind(cbind(1, mujeres[,-1], 0, 0, 0, 0, 0, 0),
cbind(0, 0, 0, 0, 0, 0, 1, hombres[,-1]))
dim(X)
#Matriz (X'X)^{-1}
XX_inv <- solve(t(X)%*%X)
#Estimadores de MCU
b_MCU <- XX_inv%*%t(X)%*%W[,1]
rownames(b_MCU) <- c("$\\hat{\\alpha}_m$", "$\\hat{\\beta}_{1m}$", "$\\hat{\\beta}_{2m}$",
"$\\hat{\\beta}_{3m}$", "$\\hat{\\beta}_{4m}$", "$\\hat{\\beta}_{5m}$",
"$\\hat{\\alpha}_h$", "$\\hat{\\beta}_{1h}$", "$\\hat{\\beta}_{2h}$",
"$\\hat{\\beta}_{3h}$", "$\\hat{\\beta}_{4h}$", "$\\hat{\\beta}_{5h}$")
colnames(b_MCU) <- "Valor"
print(xtable(b_MCU, digits = 5),
sanitize.text.function=function(x){x},
comment = F)
#Errores de MCU
U_MCU <- W[,1] - X%*%b_MCU
#Varianza de los errores de MCU
var.u_MCU <- 1/(n-k)*t(U_MCU)%*%U_MCU
F_b.hat <- (t(R%*%b_MCU - r)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU - r)) / (m*var.u_MCU)
F_b.hat
alpha <- 0.05
F_alpha <- qf(alpha, df1 = m, df2 = n-k, lower.tail = F)
F_alpha
# #mismo resultado
# b_mcr_test <- b_MCU - XX_inv%*%t(R)%*%solve(R%*%XX_inv%*%t(R))%*%(R%*%b_MCU-r)
Z <- cbind(1, W[,-1])
b_mcr <- rbind(solve(t(Z)%*%Z)%*%t(Z)%*%W[,1],
solve(t(Z)%*%Z)%*%t(Z)%*%W[,1])
b_mcr
U_mcr <- W[,1] - X%*%b_mcr
F_b.hat <- (t(U_mcr)%*%U_mcr - t(U_MCU)%*%U_MCU) / (m*1/(n-k)*t(U_MCU)%*%U_MCU)
F_b.hat
numerador <- t(b_mcr - b_MCU)%*%solve(XX_inv)%*%(b_mcr - b_MCU)
denominador <- (m*1/(n-k)*t(U_MCU)%*%U_MCU)
F_b.hat <- numerador / denominador
F_b.hat
b_MCU
b_MCU
n
b_mcr
n-k
